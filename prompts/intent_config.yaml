# ==========================================
# 意图识别系统配置文件
# ==========================================
# 作用：为智能文档提供统一的意图识别配置
# 架构：支持LLM主要分析 + 关键词降级分析的双层架构
# 版本：v2.0 - 全新架构设计
# ==========================================

# ==========================================
# 核心配置 - LLM模型选择与连接配置
# ==========================================
llm_config:
  # 服务模式：remote（远程API）| local（本地模型）
  service_mode: "remote"
  
  # LLM提供商和模型配置
  providers:
    # DeepSeek配置
    deepseek:
      enabled: true
      api_key_env: "sk-09ffd75d0697477a8d9effbd8e0f3d0b"
      base_url: "https://api.deepseek.com"
      models:
        - "deepseek-chat"
        - "deepseek-coder"
        - "deepseek-v3"
      default_model: "deepseek-chat"
      
    # 豆包（字节跳动）配置
    doubao:
      enabled: true
      api_key_env: "DOUBAO_API_KEY"
      base_url: "https://ark.cn-beijing.volces.com"
      models:
        - "doubao-lite-4k"
        - "doubao-pro-4k"
        - "doubao-pro-32k"
      default_model: "doubao-pro-4k"
      
    # 智谱AI配置  
    zhipu:
      enabled: true
      api_key_env: "ZHIPU_API_KEY"
      base_url: "https://open.bigmodel.cn"
      models:
        - "glm-4"
        - "glm-3-turbo"
      default_model: "glm-4"
      
    # OpenAI配置（备用）
    openai:
      enabled: false
      api_key_env: "OPENAI_API_KEY"
      base_url: "https://api.openai.com"
      models:
        - "gpt-3.5-turbo"
        - "gpt-4"
        - "gpt-4-turbo"
      default_model: "gpt-3.5-turbo"
      
    # 本地Ollama配置
    ollama:
      enabled: false
      base_url: "http://localhost:11434"
      models:
        - "llama2"
        - "qwen2"
        - "chatglm3"
      default_model: "qwen2"
  
  # 当前使用的提供商和模型
  current_provider: "deepseek"
  current_model: "deepseek-chat"
  
  # LLM调用参数
  parameters:
    max_tokens: 300
    temperature: 0.1
    timeout: 30
    max_retries: 2

# ==========================================
# 意图识别提示词配置
# ==========================================
intent_prompts:
  # 系统提示词 - 定义AI助手的角色和任务
  system_prompt: |
    你是一个专业的用户意图识别专家。你需要分析用户的输入，判断用户的真实意图并分类。

    请严格按照以下JSON格式返回分析结果（不要添加markdown格式或其他文本）：
    {
      "intent_type": "normal_chat|knowledge_search|mcp_action",
      "confidence": 0.0-1.0之间的数字,
      "action_type": "chat|search_documents|create_file|create_folder|other",
      "parameters": {
        "chat_topic": "如果是普通聊天，提取聊天主题",
        "search_keywords": "如果是知识检索，提取关键词",
        "file_name": "如果是创建文件，提取文件名",
        "folder_name": "如果是创建文件夹，提取文件夹名",
        "parent_folder": "如果指定了父目录，提取父目录名"
      },
      "reasoning": "简要说明判断依据"
    }

    意图分类说明：
    1. mcp_action（MCP操作）:
       - 用户想要执行具体的系统操作
       - 需要调用MCP工具来完成任务
       - 主要是文件和文件夹的创建操作
       - 关键词：创建、新建、建立、生成、制作、添加等
    
    2. knowledge_search（知识库检索）:
       - 用户想要在已有文档中查找特定信息
       - 需要基于已存储的文档内容来回答问题
       - 包括搜索、查询、分析文档内容等
       - 关键词：查找、搜索、分析、文档中、资料里、检索等
    
    3. normal_chat（普通聊天）: 
       - 用户想要进行一般性对话交流
       - 询问常识性问题、技术问题、寻求建议等
       - 不需要检索特定文档或执行操作
       - 关键词：什么是、如何、为什么、请解释、建议等

    判断优先级（严格按顺序执行）：
    1. 最高优先级：如果明确包含创建、新建等操作词 → mcp_action
    2. 中等优先级：如果明确要查找、搜索文档内容 → knowledge_search  
    3. 兜底优先级：其他所有情况，包括一般对话 → normal_chat
    4. 意图模糊时，优先考虑 normal_chat 作为安全兜底

  # 用户提示词模板
  user_prompt_template: |
    请分析以下用户输入的意图：

    用户输入："{query}"

    请返回JSON格式的分析结果：

  # 置信度阈值配置
  confidence_threshold: 0.6

# ==========================================
# 降级处理配置
# ==========================================
fallback_config:
  # 是否启用降级处理
  enabled: true
  
  # 降级触发条件（仅当LLM分析真正失败时才降级）
  triggers:
    - "llm_api_error"      # LLM API调用失败
    - "json_parse_error"   # JSON解析失败
    - "timeout_error"      # 请求超时
    # 移除low_confidence，不再因为置信度低而降级
  
  # 降级处理策略
  strategy: "keyword_analysis"  # keyword_analysis | fixed_response | hybrid
  
  # 降级时的默认意图（保持normal_chat作为兜底）
  default_intent: "normal_chat"
  default_confidence: 0.5

# ==========================================
# 关键词分析意图配置
# ==========================================
keyword_analysis:
  # 是否启用关键词分析
  enabled: true
  
  # 关键词权重配置
  weights:
    exact_match: 1.0      # 精确匹配权重
    partial_match: 0.7    # 部分匹配权重
    contextual_boost: 0.3 # 上下文增强权重
  
  # 意图关键词映射（按优先级排序）
  intent_keywords:
    # MCP操作意图关键词（最高优先级）
    mcp_action:
      primary:
        - ["创建", "新建", "建立", "生成", "制作"]
        - ["添加", "增加", "建", "做一个", "写个"]
        - ["文件", "文档", "文件夹", "目录", "新建文件", "新建文件夹"]
      secondary:
        - ["保存", "存储", "写入"]
        - ["组织", "整理", "归档"]
      confidence_base: 0.9
      
    # 知识库检索意图关键词（中等优先级）
    knowledge_search:
      primary:
        - ["查找", "搜索", "寻找", "检索", "查询"]
        - ["分析", "检查", "审查", "评估", "对比"]
        - ["文档中", "资料里", "报告显示", "数据表明"]
        - ["内容", "信息", "数据", "资料", "找到", "搜到"]
      secondary:
        - ["确认", "核查", "检验", "验证"]
        - ["统计", "汇总", "总结", "归纳"]
        - ["文件夹", "目录", "包含", "涉及"]
      confidence_base: 0.8
      
    # 普通聊天意图关键词（兜底优先级）
    normal_chat:
      primary:
        - ["什么是", "如何", "为什么", "请解释", "请介绍"]
        - ["你是谁", "你好", "介绍自己", "你叫什么", "你的身份"]
        - ["建议", "推荐", "意见", "看法", "评价"]
        - ["帮我写", "帮我生成", "给我一个例子"]
        - ["原理", "概念", "定义", "特点", "优缺点"]
        - ["方法", "技巧", "步骤", "流程"]
      secondary:
        - ["教我", "指导", "怎么办", "怎么做"]
        - ["比较", "对比", "区别", "差异"]
      confidence_base: 0.6  # 降低基础置信度，作为兜底选项
      
  # 文件类型检测
  file_detection:
    extensions:
      - [".txt", ".md", ".doc", ".docx", ".pdf"]  # 文档类型
      - [".xls", ".xlsx", ".csv"]                 # 表格类型
      - [".jpg", ".png", ".gif", ".bmp"]          # 图像类型
      - [".mp4", ".avi", ".mov", ".wmv"]          # 视频类型
    confidence_boost: 0.2
    
  # 操作动词检测
  action_verbs:
    create: ["创建", "新建", "建立", "生成", "制作", "添加", "建"]
    search: ["找", "搜", "查", "看", "分析", "检查", "确认"]
    chat: ["问", "询问", "请问", "想知道", "了解", "学习"]
    
  # 上下文增强规则
  context_rules:
    # 文件操作上下文
    file_context:
      patterns: [".*文件.*", ".*目录.*", ".*文件夹.*"]
      intent_boost:
        mcp_action: 0.3
        knowledge_search: 0.1
        
    # 搜索上下文  
    search_context:
      patterns: [".*查找.*", ".*搜索.*", ".*分析.*"]
      intent_boost:
        knowledge_search: 0.3
        normal_chat: -0.1
        
    # 对话上下文
    chat_context:
      patterns: [".*什么.*", ".*如何.*", ".*为什么.*"]
      intent_boost:
        normal_chat: 0.2
        knowledge_search: 0.1
        
    # 身份询问上下文
    identity_context:
      patterns: [".*你是谁.*", ".*介绍.*自己.*", ".*你好.*", ".*你叫.*", ".*你的身份.*"]
      intent_boost:
        normal_chat: 0.5
        knowledge_search: -0.3

# ==========================================
# 错误处理配置
# ==========================================
error_handling:
  # LLM调用错误
  llm_api_error:
    fallback_intent: "normal_chat"
    confidence: 0.5
    reasoning: "LLM服务不可用，使用关键词分析降级处理"
    
  # JSON解析错误
  json_parse_error:
    fallback_intent: "normal_chat"
    confidence: 0.4
    reasoning: "LLM返回格式错误，使用关键词分析降级处理"
    
  # 请求超时
  timeout_error:
    fallback_intent: "normal_chat"
    confidence: 0.5
    reasoning: "LLM请求超时，使用关键词分析降级处理"
    
  # 未知错误
  unknown_error:
    fallback_intent: "normal_chat"
    confidence: 0.3
    reasoning: "系统遇到未知错误，使用normal_chat作为安全兜底"

# ==========================================
# 性能优化配置
# ==========================================
performance:
  # 缓存配置
  cache:
    enabled: true
    ttl: 3600  # 缓存时间（秒）
    max_entries: 1000
    
  # 批处理配置
  batch:
    enabled: false
    max_batch_size: 10
    timeout: 60
    
  # 监控配置
  monitoring:
    enabled: true
    log_level: "INFO"
    metrics:
      - "response_time"
      - "confidence_score"
      - "fallback_rate"
      - "error_rate"

# ==========================================
# 扩展配置（预留）
# ==========================================
extensions:
  # 自定义意图类型
  custom_intents: {}
  
  # 领域特定配置
  domain_specific: {}
  
  # 多语言支持
  multilingual:
    enabled: false
    languages: ["zh-CN", "en-US"] 