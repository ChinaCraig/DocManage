# ==========================================
# 意图识别提示词配置文件
# ==========================================
# 作用：为智能文档管理系统提供用户意图分析和分类的标准化配置
# 功能：1. 三分类意图识别：普通聊天、知识库检索、MCP操作
#      2. 智能参数提取：根据意图类型提取相关参数
#      3. 置信度评估：提供意图判断的可信度评分
# 使用场景：用户查询分析、智能路由、功能自动化等
# ==========================================

# ==========================================
# 核心意图识别配置
# ==========================================
# 目的：定义系统的核心意图分类逻辑和提示词模板
# 三大核心意图：normal_chat(普通聊天)、knowledge_search(知识库检索)、mcp_action(MCP操作)
intent_analysis:
  # ==========================================
  # 主系统提示词 - 定义意图分析助手的角色、任务和输出格式
  # ==========================================
  # 特点：1. 严格的JSON输出格式要求
  #      2. 详细的意图分类说明和示例
  #      3. 明确的判断重点和优先级规则
  system_prompt: |
    你是一个专业的用户意图分析助手。你需要分析用户的输入，判断用户想要什么类型的响应。

    请严格按照以下JSON格式返回分析结果（不要添加markdown格式或其他文本）：
    {
      "intent_type": "normal_chat|knowledge_search|mcp_action",
      "confidence": 0.0-1.0之间的数字,
      "action_type": "chat|search_documents|create_file|create_folder|other",
      "parameters": {
        "chat_topic": "如果是普通聊天，提取聊天主题",
        "search_keywords": "如果是知识库检索，提取关键词",
        "file_name": "如果是创建文件，提取文件名",
        "folder_name": "如果是创建文件夹，提取文件夹名",
        "parent_folder": "如果指定了父目录，提取父目录名"
      },
      "reasoning": "简要说明判断依据"
    }

    意图分类说明：
    1. normal_chat (普通聊天): 
       - 用户想要与AI进行一般性对话
       - 询问常识性问题、技术问题、寻求建议等
       - 不需要检索特定文档或执行操作
       - 例如："什么是人工智能？"、"请帮我写一个Python函数"、"今天天气怎么样？"
    
    2. knowledge_search (知识库或向量库检索):
       - 用户想要在已有文档中查找特定信息
       - 需要基于已存储的文档内容来回答问题
       - 包括搜索、查询、分析文档内容等
       - 例如："查找关于XX的文档"、"公司的财务报告中有什么信息？"、"分析XX文件夹的内容"
    
    3. mcp_action (MCP调用):
       - 用户想要执行具体操作（如创建文件、创建文件夹等）
       - 需要调用MCP工具来完成任务
       - 例如："创建一个新文件"、"建立XX文件夹"

    操作类型说明：
    - chat: 普通对话交流
    - search_documents: 搜索和分析文档内容（包括文件夹分析）
    - create_file: 创建文件
    - create_folder: 创建文件夹/目录
    - other: 其他操作

    判断重点：
    1. 如果用户询问的是通用知识、技术问题、寻求建议等，且明显不需要查找特定文档 → normal_chat
    2. 如果用户明确要查找、搜索、分析已有文档或文件夹内容 → knowledge_search
    3. 如果用户要创建、新建文件或文件夹 → mcp_action
    4. 意图模糊时，优先考虑 knowledge_search（因为用户可能想在文档中找答案）

  # ==========================================
  # 用户输入提示词模板 - 标准化的用户查询分析格式
  # ==========================================
  # 作用：将用户输入格式化为适合LLM分析的标准提示词
  user_prompt_template: |
    请分析以下用户输入的意图：

    用户输入："{query}"

    请返回JSON格式的分析结果：

  # ==========================================
  # LLM模型参数配置 - 控制意图识别的准确性和效率
  # ==========================================
  # 参数说明：
  # - max_tokens: 限制输出长度，确保响应效率
  # - temperature: 低温度值确保输出稳定性和一致性
  # - confidence_threshold: 置信度阈值，低于此值时使用降级策略
  parameters:
    max_tokens: 300           # 最大生成token数，适合JSON格式输出
    temperature: 0.1          # 极低温度，确保意图识别的稳定性
    confidence_threshold: 0.6 # 置信度阈值，用于判断是否需要降级处理

# ==========================================
# 扩展意图类型配置（保留用于未来扩展）
# ==========================================
# 目的：为系统扩展提供灵活的意图类型定义框架
# 设计：每个扩展意图都归属于三大核心意图之一，避免分类过于复杂
extended_intents:
  # 代码生成意图 - 归属于普通聊天类别
  code_generation:
    description: "生成代码或编程相关问答"
    keywords: ["写代码", "编程", "函数", "算法", "代码示例"]
    parent_intent: "normal_chat"     # 父级意图，用于降级处理
    confidence_boost: 0.1            # 置信度加成，提高识别准确性
    
  # 文档总结意图 - 归属于知识库检索类别
  document_summary:
    description: "总结或概括文档内容"
    keywords: ["总结", "概括", "摘要", "归纳"]
    parent_intent: "knowledge_search"
    confidence_boost: 0.1
    
  # 批量操作意图 - 归属于MCP操作类别
  batch_operation:
    description: "批量处理文件或文件夹"
    keywords: ["批量", "多个", "全部", "所有文件"]
    parent_intent: "mcp_action"
    confidence_boost: 0.1

# ==========================================
# 特定场景的意图识别提示词
# ==========================================
# 目的：为不同业务领域提供定制化的意图识别逻辑
# 优势：提高特定领域的意图识别准确性
scenario_prompts:
  # ==========================================
  # 法律文档场景 - 针对法律业务的意图识别优化
  # ==========================================
  legal_document:
    # 法律文档场景的系统提示词
    system_prompt: |
      你是法律文档管理专家。在意图分析时，特别关注：
      - 法律条款查询 → knowledge_search
      - 法律常识问答 → normal_chat  
      - 法律文档创建 → mcp_action
      
      判断标准与通用意图识别相同，但对法律相关词汇更敏感。
      
    # 法律领域增强关键词配置
    enhanced_keywords:
      knowledge_search: ["法条", "条款", "法规", "判例", "案例", "合规检查", "法律审查"]
      normal_chat: ["法律常识", "法律建议", "法律解释", "什么是"]
      mcp_action: ["创建合同", "建立法律文件", "新建协议"]

  # ==========================================
  # 财务文档场景 - 针对财务业务的意图识别优化
  # ==========================================
  financial_document:
    # 财务文档场景的系统提示词
    system_prompt: |
      你是财务文档管理专家。在意图分析时，特别关注：
      - 财务数据查询 → knowledge_search
      - 财务知识问答 → normal_chat
      - 财务文档创建 → mcp_action
      
    # 财务领域增强关键词配置
    enhanced_keywords:
      knowledge_search: ["财务报表", "账目查询", "预算分析", "成本数据", "审计报告"]
      normal_chat: ["财务常识", "会计原理", "如何计算", "什么是"]
      mcp_action: ["创建报表", "建立预算表", "新建财务文件"]

  # ==========================================
  # 人力资源场景 - 针对HR业务的意图识别优化
  # ==========================================
  hr_document:
    # HR文档场景的系统提示词
    system_prompt: |
      你是人力资源文档管理专家。在意图分析时，特别关注：
      - 员工信息查询 → knowledge_search
      - HR管理问答 → normal_chat
      - HR文档创建 → mcp_action
      
    # HR领域增强关键词配置
    enhanced_keywords:
      knowledge_search: ["员工档案", "政策查询", "绩效数据", "薪酬信息", "组织架构"]
      normal_chat: ["管理建议", "HR最佳实践", "如何提升", "什么是"]
      mcp_action: ["创建员工档案", "建立政策文件", "新建培训材料"]

# ==========================================
# 关键词增强配置
# ==========================================
# 目的：通过关键词匹配提高意图识别的准确性和鲁棒性
# 工作原理：当LLM无法准确识别时，使用关键词匹配作为补充判断依据
keyword_enhancement:
  # ==========================================
  # 意图关键词映射 - 将常见用词映射到对应意图类型
  # ==========================================
  intent_keywords:
    # 普通聊天意图的典型关键词
    normal_chat: 
      - ["什么是", "如何", "为什么", "请解释", "请介绍"]
      - ["建议", "推荐", "意见", "看法", "评价"]
      - ["帮我写", "帮我生成", "给我一个例子"]
      - ["原理", "概念", "定义", "特点", "优缺点"]
    
    # 知识库检索意图的典型关键词
    knowledge_search:
      - ["查找", "搜索", "寻找", "检索", "查询"]
      - ["分析", "检查", "审查", "评估", "对比"]
      - ["文档中", "资料里", "报告显示", "数据表明"]
      - ["XX的内容", "XX的信息", "XX的数据"]
    
    # MCP操作意图的典型关键词
    mcp_action:
      - ["创建", "新建", "建立", "生成", "制作"]
      - ["添加", "增加", "建", "做一个"]
      - ["文件", "文件夹", "目录", "文档"]
  
  # ==========================================
  # 操作动词映射 - 将动作词映射到具体操作类型
  # ==========================================
  action_verbs:
    chat: ["问", "询问", "请问", "想知道", "了解", "学习"]
    search: ["找", "搜", "查", "看", "分析", "检查", "确认"]
    create: ["创建", "新建", "建立", "生成", "制作", "添加"]
    
  # ==========================================
  # 对象名词映射 - 将目标对象映射到相应类别
  # ==========================================
  object_nouns:
    file: ["文件", "文档", "资料", "材料", "报告", "表格"]
    folder: ["文件夹", "目录", "分类", "归档"]
    knowledge: ["信息", "内容", "数据", "资料", "知识"]

# ==========================================
# 置信度调整规则
# ==========================================
# 目的：基于特定条件动态调整意图识别的置信度
# 策略：高置信度场景获得更大加成，确保准确识别
confidence_rules:
  # ==========================================
  # 高置信度场景 - 明确意图表达的情况
  # ==========================================
  high_confidence:
    - condition: "包含明确的创建动词和文件对象"
      boost: 0.3                    # 置信度加成
      intent_type: "mcp_action"     # 对应意图类型
      
    - condition: "包含明确的搜索动词和文档对象"
      boost: 0.3
      intent_type: "knowledge_search"
      
    - condition: "包含通用知识询问词汇"
      boost: 0.2
      intent_type: "normal_chat"
      
  # ==========================================
  # 中等置信度场景 - 部分明确的意图表达
  # ==========================================
  medium_confidence:
    - condition: "包含疑问词但无明确对象"
      boost: 0.1
      intent_type: "normal_chat"
      
    - condition: "包含分析词汇"
      boost: 0.1
      intent_type: "knowledge_search"
      
  # ==========================================
  # 模糊场景处理 - 意图不明确时的默认策略
  # ==========================================
  ambiguous_cases:
    - condition: "查询过于简短或模糊"
      default_intent: "knowledge_search"    # 默认意图类型
      confidence: 0.5                       # 默认置信度
      reasoning: "查询模糊，默认尝试知识库检索"

# ==========================================
# 错误处理和降级策略
# ==========================================
# 目的：确保系统在异常情况下的稳定性和可用性
# 策略：多层降级机制，从LLM分析→关键词匹配→默认策略
error_handling:
  # ==========================================
  # JSON解析失败时的处理策略
  # ==========================================
  json_parse_error:
    fallback_intent: "knowledge_search"     # 降级意图类型
    confidence: 0.5                         # 降级置信度
    reasoning: "LLM返回格式异常，使用关键词分析降级"
    
  # ==========================================
  # LLM调用失败时的处理策略
  # ==========================================
  llm_call_error:
    fallback_intent: "knowledge_search" 
    confidence: 0.4
    reasoning: "LLM调用失败，使用基础关键词匹配"
    
  # ==========================================
  # 超时处理策略
  # ==========================================
  timeout_error:
    fallback_intent: "knowledge_search"
    confidence: 0.3
    reasoning: "意图识别超时，默认执行知识库检索"

# ==========================================
# A/B测试配置
# ==========================================
# 目的：支持不同提示词版本的效果对比和优化迭代
# 用法：通过配置不同版本进行在线A/B测试
ab_testing:
  # ==========================================
  # 不同提示词版本配置
  # ==========================================
  prompt_versions:
    v1: "当前生产版本（三大类型）"         # 当前稳定版本
    v2: "简化版本（更短的提示词）"         # 优化延迟的版本
    v3: "增强版本（更多示例和场景）"       # 提高准确性的版本
    
  # ==========================================
  # 测试配置参数
  # ==========================================
  testing:
    enabled: false                          # 是否启用A/B测试
    split_ratio: 0.1                        # 测试流量比例（10%）
    metrics: ["accuracy", "confidence", "response_time"]  # 监控指标 